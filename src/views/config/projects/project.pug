extends ../config-page

block config-content

    h3.page-header= `Project: ${project.id}`

    include ../../includes/angular

    script.
        app.controller("ProjectController", ["$scope", function($scope) {
          $scope.publishToken = !{ JSON.stringify(project.publishToken || "") };

          $scope.$watch("publishToken", function(val) {
            if (!$scope.publishToken) {
              $scope.publishUrl = "";
            }
            $scope.publishUrl = !{JSON.stringify(projectPublishUrl)} + "?token=" + encodeURIComponent($scope.publishToken);
          });

        }]);

    form(method="POST")

        .form-group
            label(for='repo') Git Repository
            input#repo.form-control(type='text', name='repo', placeholder='e.g. git@github.com:mkdocs/mkdocs.git', value=project.repo, required)

        .form-group
            label(for='branch') Branch
            input#branch.form-control(type='text', name='branch', placeholder='e.g. documentation', value=project.branch)

        div(ng-app="app", ng-controller="ProjectController")
            .form-group
                label(for='publishToken') Publish Token
                input#publishToken.form-control(type='text', name='publishToken', ng-model="publishToken", placeholder='Keep blank to disallow external publishing')

            .form-group(ng-if="publishToken")
                label(for='publishUrl') Publish URL
                .input-group
                    span.input-group-addon POST
                    input#publishUrl.form-control(type='text', name='publishUrl', ng-model="publishUrl", placeholder='No publishing URL', readonly)

        .form-group
            label Deploy Key
            p.
                A deploy key is an SSH key that is stored on the MkDocs Server and grants access to a remote repository.

            p
                if deployKey
                    textarea#deployKey.form-control(type='text', name='deployKey', style="height: 10em", readonly=)= deployKey
                else
                    button#deployKey.btn.btn-command.btn-default(type="submit" name="action" value="deployKey") Generate Deploy Key

            p.
                You'll need to install the generated key on your git server with <b>read</b> access:
            ul
                li
                    a(href="https://confluence.atlassian.com/bitbucket/use-access-keys-294486051.html") BitBucket instructions
                li
                    a(href="https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys") GitHub instructions
                li
                    a(href="https://docs.gitlab.com/ce/ssh/README.html#deploy-keys") GitLab instructions

        hr

        button.btn.btn-command.btn-primary(type="submit" name="action" value="update") Save Changes
        =" "
        a.btn.btn-command.btn-default(href="/!config/projects") Cancel
        div.pull-right
            button.btn.btn-warning(type="submit" name="action" value="reset") Reset Project
            =" "
            button.btn.btn-danger(type="submit" name="action" value="delete") Delete Project

    p
        table.table
            tbody
                tr
                    th.shrink Status
                    td= project.statusLabel
                if project.activity
                    tr
                        th.shrink Activity
                        td= project.activityLabel
                if project.error
                    tr
                        th.shrink Error
                        td
                            p
                                b=project.error.message
                            pre=project.error.log

